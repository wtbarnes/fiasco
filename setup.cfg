[metadata]
name = fiasco
author = Will Barnes
author_email = will.t.barnes@gmail.com
license = BSD 3-Clause
license_files = LICENSE.rst
description = A Python interface to the CHIANTI atomic database
long_description = file: README.md
long_description_content_type = text/markdown
url = https://fiasco.readthedocs.io
project_urls =
    Source=https://github.com/wtbarnes/fiasco
    Issues=https://github.com/wtbarnes/fiasco/issues/
edit_on_github = True
github_project = wtbarnes/fiasco
keywords = heliophysics, solar physics, astrophysics, plasma physics, science, atomic data
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Physics
    Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
include_package_data = True
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    astropy
    numpy
    h5py
    fortranformat
    plasmapy

[options.extras_require]
test =
    pytest
    pytest-astropy
    pytest-cov
    matplotlib
docs =
    sphinx>=4.2,<5
    sphinx-automodapi
    sphinx-gallery
    towncrier
    aiapy
    sphinx-book-theme
    sphinxcontrib-bibtex

[options.package_data]
fiasco.tests.idl = ssw_gen_functions/*.pro

[tool:pytest]
testpaths = "fiasco" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
remote_data_strict = False
filterwarnings =
  error
  ignore:numpy.ndarray size changed

[coverage:run]
omit =
  fiasco/conftest.py
  fiasco/*setup_package*
  fiasco/tests/*
  fiasco/*/tests/*
  fiasco/extern/*
  fiasco/version*
  */fiasco/conftest.py
  */fiasco/*setup_package*
  */fiasco/tests/*
  */fiasco/*/tests/*
  */fiasco/extern/*
  */fiasco/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
